{"ast":null,"code":"var _jsxFileName = \"/Users/Enjodi/Desktop/movieapp/src/TabMovies.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport './App.css';\nimport axios from 'axios';\nimport Movie from \"./components/Movie\";\nimport Youtube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TabMovies() {\n  _s();\n\n  const MOVIE_API = \"https://api.themoviedb.org/3/\";\n  const SEARCH_API = MOVIE_API + \"search/movie\";\n  const DISCOVER_API = MOVIE_API + \"trending/movie/week\";\n  const API_KEY = \"9f7b6e946ac75c3cb54ee6d09ea3c774\";\n  const BACKDROP_PATH = \"https://image.tmdb.org/t/p/w1280\";\n  const [playing, setPlaying] = useState(false);\n  const [trailer, setTrailer] = useState(null);\n  const [movies, setMovies] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [movie, setMovie] = useState({\n    title: \"Loading Movies\"\n  });\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  const fetchMovies = async event => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    const {\n      data\n    } = await axios.get(`${searchKey ? SEARCH_API : DISCOVER_API}`, {\n      params: {\n        api_key: API_KEY,\n        query: searchKey\n      }\n    });\n    console.log(data.results[0]);\n    setMovies(data.results);\n    setMovie(data.results[0]);\n\n    if (data.results.length) {\n      await fetchMovie(data.results[0].id);\n    }\n  };\n\n  const fetchMovie = async id => {\n    const {\n      data\n    } = await axios.get(`${MOVIE_API}movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: \"videos\"\n      }\n    });\n\n    if (data.videos && data.videos.results) {\n      const trailer = data.videos.results.find(vid => vid.name === \"Official Trailer\");\n      setTrailer(trailer ? trailer : data.videos.results[0]);\n    }\n\n    setMovie(data);\n  };\n\n  const selectMovie = movie => {\n    fetchMovie(movie.id);\n    setPlaying(false);\n    setMovie(movie);\n    window.scrollTo(0, 0);\n  };\n\n  const renderMovies = () => movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n    selectMovie: selectMovie,\n    movie: movie\n  }, movie.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 13\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"center-max-size header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"brand\",\n        children: \"'\\uD83C\\uDFAC    Maniraja Movie App'  \\uD83C\\uDFA5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: fetchMovies,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"search\",\n          placeholder: \"Search Movie\",\n          type: \"text\",\n          id: \"search\",\n          onInput: event => setSearchKey(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-search\",\n          type: \"submit\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), movies.length ? /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [movie ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poster\",\n        style: {\n          backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(${BACKDROP_PATH}${movie.backdrop_path})`\n        },\n        children: playing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Youtube, {\n            videoId: trailer.key,\n            className: \"youtube amru\",\n            containerClassName: \"youtube-container amru\",\n            opts: {\n              width: '100%',\n              height: '100%',\n              playerVars: {\n                autoplay: 1,\n                controls: 0,\n                cc_load_policy: 0,\n                fs: 0,\n                iv_load_policy: 0,\n                modestbranding: 0,\n                rel: 0,\n                showinfo: 0\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setPlaying(false),\n            className: \"button close-video\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"center-max-size\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poster-content\",\n            children: [trailer ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button play-video\",\n              onClick: () => setPlaying(true),\n              type: \"button\",\n              children: \"Play Trailer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 45\n            }, this) : 'Sorry, no trailer available', /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: movie.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-max-size container\",\n        children: renderMovies()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this) : 'Sorry, no movies found']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TabMovies, \"I+yW9H0v5a1Xod2neXqN2IB2MxI=\");\n\n_c = TabMovies;\nexport default TabMovies;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabMovies\");","map":{"version":3,"sources":["/Users/Enjodi/Desktop/movieapp/src/TabMovies.js"],"names":["useEffect","useState","axios","Movie","Youtube","TabMovies","MOVIE_API","SEARCH_API","DISCOVER_API","API_KEY","BACKDROP_PATH","playing","setPlaying","trailer","setTrailer","movies","setMovies","searchKey","setSearchKey","movie","setMovie","title","fetchMovies","event","preventDefault","data","get","params","api_key","query","console","log","results","length","fetchMovie","id","append_to_response","videos","find","vid","name","selectMovie","window","scrollTo","renderMovies","map","target","value","backgroundImage","backdrop_path","key","width","height","playerVars","autoplay","controls","cc_load_policy","fs","iv_load_policy","modestbranding","rel","showinfo","overview"],"mappings":"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","sourcesContent":["import {useEffect, useState} from \"react\"\nimport './App.css'\nimport axios from 'axios'\nimport Movie from \"./components/Movie\"\nimport Youtube from 'react-youtube'\n\nfunction TabMovies() {\n    const MOVIE_API = \"https://api.themoviedb.org/3/\"\n    const SEARCH_API = MOVIE_API + \"search/movie\"\n    const DISCOVER_API = MOVIE_API + \"trending/movie/week\"\n    const API_KEY = \"9f7b6e946ac75c3cb54ee6d09ea3c774\"\n    const BACKDROP_PATH = \"https://image.tmdb.org/t/p/w1280\"\n\n    const [playing, setPlaying] = useState(false)\n    const [trailer, setTrailer] = useState(null)\n    const [movies, setMovies] = useState([])\n    const [searchKey, setSearchKey] = useState(\"\")\n    const [movie, setMovie] = useState({title: \"Loading Movies\"})\n\n    useEffect(() => {\n        fetchMovies()\n    }, [])\n\n    const fetchMovies = async (event) => {\n        if (event) {\n            event.preventDefault()\n        }\n\n        const {data} = await axios.get(`${searchKey ? SEARCH_API : DISCOVER_API}`, {\n            params: {\n                api_key: API_KEY,\n                query: searchKey\n            }\n        })\n\n        console.log(data.results[0])\n        setMovies(data.results)\n        setMovie(data.results[0])\n\n        if (data.results.length) {\n            await fetchMovie(data.results[0].id)\n        }\n    }\n\n    const fetchMovie = async (id) => {\n        const {data} = await axios.get(`${MOVIE_API}movie/${id}`, {\n            params: {\n                api_key: API_KEY,\n                append_to_response: \"videos\"\n            }\n        })\n\n        if (data.videos && data.videos.results) {\n            const trailer = data.videos.results.find(vid => vid.name === \"Official Trailer\")\n            setTrailer(trailer ? trailer : data.videos.results[0])\n        }\n\n        setMovie(data)\n    }\n\n\n    const selectMovie = (movie) => {\n        fetchMovie(movie.id)\n        setPlaying(false)\n        setMovie(movie)\n        window.scrollTo(0, 0)\n    }\n\n    const renderMovies = () => (\n        movies.map(movie => (\n            <Movie\n                selectMovie={selectMovie}\n                key={movie.id}\n                movie={movie}\n            />\n        ))\n    )\n\n    return (\n        <div className=\"App\">\n            <header className=\"center-max-size header\">\n                <span className={\"brand\"}>'🎬    Maniraja Movie App'  🎥</span>\n                <form className=\"form\" onSubmit={fetchMovies}>\n                    <input className=\"search\" placeholder=\"Search Movie\" type=\"text\" id=\"search\"\n                           onInput={(event) => setSearchKey(event.target.value)}/>\n                    <button className=\"submit-search\" type=\"submit\"> <i className=\"fa fa-search\"></i></button>\n                </form>\n            </header>\n            {movies.length ?\n                <main>\n                    {movie ?\n                        <div className=\"poster\"\n                             style={{backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(${BACKDROP_PATH}${movie.backdrop_path})`}}>\n                            {playing ?\n                                <>\n                                    <Youtube\n                                        videoId={trailer.key}\n                                        className={\"youtube amru\"}\n                                        containerClassName={\"youtube-container amru\"}\n                                        opts={\n                                            {\n                                                width: '100%',\n                                                height: '100%',\n                                                playerVars: {\n                                                    autoplay: 1,\n                                                    controls: 0,\n                                                    cc_load_policy: 0,\n                                                    fs: 0,\n                                                    iv_load_policy: 0,\n                                                    modestbranding: 0,\n                                                    rel: 0,\n                                                    showinfo: 0,\n                                                },\n                                            }\n                                        }\n                                    />\n                                    <button onClick={() => setPlaying(false)} className={\"button close-video\"}>Close\n                                    </button>\n                                </> :\n                                <div className=\"center-max-size\">\n                                    <div className=\"poster-content\">\n                                        {trailer ?\n                                            <button className={\"button play-video\"} onClick={() => setPlaying(true)}\n                                                    type=\"button\">Play\n                                                Trailer</button>\n                                            : 'Sorry, no trailer available'}\n                                        <h1>{movie.title}</h1>\n                                        <p>{movie.overview}</p>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                        : null}\n\n                    <div className={\"center-max-size container\"}>\n                        {renderMovies()}\n                    </div>\n                </main>\n                : 'Sorry, no movies found'}\n        </div>\n    );\n}\n\nexport default TabMovies;\n"]},"metadata":{},"sourceType":"module"}